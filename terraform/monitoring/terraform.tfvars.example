# Terraform Variables for Monitoring System
# IN-117: AMP/AMG Configuration
# Copy this file to terraform.tfvars and fill in your values

# Environment Configuration
environment = "prod"
aws_region  = "ap-northeast-2"
service     = "monitoring"

# Governance Tags
owner              = "platform-team"
team               = "platform-team"
cost_center        = "engineering"
resource_lifecycle = "permanent"
data_class         = "internal"

# Terraform State
terraform_state_bucket = "prod-connectly"

# AMP Configuration
amp_workspace_alias  = "infrastructure-metrics"
amp_retention_period = 150 # days
amp_enable_logging   = true

# AMG Configuration
amg_workspace_name           = "infrastructure-observability"
amg_account_access_type      = "CURRENT_ACCOUNT"
amg_authentication_providers = ["AWS_SSO"]
amg_permission_type          = "SERVICE_MANAGED"
amg_data_sources             = ["PROMETHEUS", "CLOUDWATCH"]

# ADOT Collector Configuration
enable_adot_collector = true
adot_image_version    = "v0.42.0"

# CloudWatch Metrics Export
enable_cloudwatch_metrics_export = true
cloudwatch_metrics_namespaces = [
  "AWS/ECS",
  "AWS/RDS",
  "AWS/ApplicationELB"
]

# Alerting Configuration (IN-118)
enable_ecs_alarms = true
enable_rds_alarms = false # Will be enabled when RDS is deployed
enable_alb_alarms = false # Will be enabled when ALB is deployed

# Email Alerts (Optional)
enable_critical_email_alerts = false
critical_alert_email         = ""

# Slack Integration (Set via GitHub Secrets in CI/CD)
# slack_workspace_id = "YOUR_SLACK_WORKSPACE_ID"
# slack_channel_id   = "YOUR_SLACK_CHANNEL_ID"
# enable_chatbot     = true
