name: Documentation Validation

on:
  pull_request:
    paths:
      - 'terraform/**/README.md'
      - 'docs/**/*.md'
      - '.github/workflows/docs-validation.yml'
      - 'scripts/check-terraform-docs.sh'
  push:
    branches:
      - main
    paths:
      - 'terraform/**/README.md'
      - 'docs/**/*.md'

permissions:
  contents: read
  pull-requests: write

jobs:
  validate-docs:
    name: Validate Terraform Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation script exists
        run: |
          if [[ ! -f "./scripts/check-terraform-docs.sh" ]]; then
            echo "‚ùå ERROR: scripts/check-terraform-docs.sh not found"
            exit 1
          fi
          chmod +x ./scripts/check-terraform-docs.sh

      - name: Validate all Terraform package documentation
        id: validate
        run: |
          echo "üìö Starting documentation validation..."
          ./scripts/check-terraform-docs.sh > /tmp/docs-validation.log 2>&1
          VALIDATION_EXIT_CODE=$?

          echo "exit_code=$VALIDATION_EXIT_CODE" >> $GITHUB_OUTPUT

          # Store validation output for PR comment
          cat /tmp/docs-validation.log

          exit $VALIDATION_EXIT_CODE

      - name: Comment PR with validation results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const validationLog = fs.readFileSync('/tmp/docs-validation.log', 'utf8');
            const exitCode = '${{ steps.validate.outputs.exit_code }}';

            let emoji = '‚úÖ';
            let title = 'Î¨∏ÏÑú Í≤ÄÏ¶ù ÏÑ±Í≥µ';
            let color = 'green';

            if (exitCode !== '0') {
              emoji = '‚ùå';
              title = 'Î¨∏ÏÑú Í≤ÄÏ¶ù Ïã§Ìå®';
              color = 'red';
            }

            const body = `## ${emoji} ${title}

            <details>
            <summary>üìã Í≤ÄÏ¶ù Í≤∞Í≥º ÏÉÅÏÑ∏Î≥¥Í∏∞</summary>

            \`\`\`
            ${validationLog}
            \`\`\`

            </details>

            ---

            ### üìñ Î¨∏ÏÑúÌôî Í∞ÄÏù¥ÎìúÎùºÏù∏

            **ÌïÑÏàò ÏÑπÏÖò:**
            - Í∞úÏöî
            - ÏÇ¨Ïö© Î∞©Î≤ï
            - Variables
            - Outputs

            **Í∂åÏû• ÏÑπÏÖò:**
            - Î≥¥Ïïà Í≥†Î†§ÏÇ¨Ìï≠ (Security Considerations)
            - Troubleshooting
            - ÏòàÏ†ú (Examples)

            **Ï∂îÍ∞Ä ÏöîÍµ¨ÏÇ¨Ìï≠:**
            - Last Updated ÎÇ†Ïßú Ìè¨Ìï®
            - ÏΩîÎìú ÏòàÏ†ú ÏµúÏÜå 3Í∞ú
            - examples/basic ÎîîÎ†âÌÜ†Î¶¨ Î∞è README.md

            üìò ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÄ [Module Standards Guide](../../docs/modules/MODULE_STANDARDS_GUIDE.md)Î•º Ï∞∏Í≥†ÌïòÏÑ∏Ïöî.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Upload validation log as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-validation-log
          path: /tmp/docs-validation.log
          retention-days: 7

  check-links:
    name: Check Documentation Links
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install markdown-link-check
        run: npm install -g markdown-link-check

      - name: Check links in documentation
        run: |
          echo "üîó Checking links in markdown files..."

          # Find all markdown files
          find . -name "*.md" \
            -not -path "./node_modules/*" \
            -not -path "./.terraform/*" \
            -not -path "./.git/*" \
            -print0 | \
            xargs -0 -n1 markdown-link-check -c .github/markdown-link-check-config.json || true
        continue-on-error: true

      - name: Comment PR with broken links
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## ‚ö†Ô∏è Î¨∏ÏÑú ÎßÅÌÅ¨ Í≤ÄÏ¶ù Í≤ΩÍ≥†

            ÏùºÎ∂Ä Î¨∏ÏÑúÏóêÏÑú Íπ®ÏßÑ ÎßÅÌÅ¨Í∞Ä Î∞úÍ≤¨ÎêòÏóàÏäµÎãàÎã§.

            GitHub Actions Î°úÍ∑∏Î•º ÌôïÏù∏ÌïòÏó¨ Î¨∏Ï†úÍ∞Ä ÎêòÎäî ÎßÅÌÅ¨Î•º ÏàòÏ†ïÌï¥Ï£ºÏÑ∏Ïöî.

            üí° **Ï∞∏Í≥†:** ÎÇ¥Î∂Ä ÎßÅÌÅ¨Îäî Î°úÏª¨ ÌôòÍ≤ΩÏóêÏÑú ÌôïÏù∏ÌïòÏãúÍ≥†, Ïô∏Î∂Ä ÎßÅÌÅ¨Îäî Ï†ïÍ∏∞Ï†ÅÏúºÎ°ú Í≤ÄÌÜ†Ìï¥Ï£ºÏÑ∏Ïöî.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  summary:
    name: Documentation Validation Summary
    runs-on: ubuntu-latest
    needs: [validate-docs, check-links]
    if: always()

    steps:
      - name: Summary
        run: |
          echo "## üìö Î¨∏ÏÑú Í≤ÄÏ¶ù ÏôÑÎ£å" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Í≤ÄÏ¶ù Í≤∞Í≥º:" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Terraform Î¨∏ÏÑú Í≤ÄÏ¶ù: ${{ needs.validate-docs.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- üîó ÎßÅÌÅ¨ Í≤ÄÏ¶ù: ${{ needs.check-links.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.validate-docs.result }}" != "success" ]]; then
            echo "‚ö†Ô∏è Î¨∏ÏÑú Í≤ÄÏ¶ùÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏúÑ Î°úÍ∑∏Î•º ÌôïÏù∏ÌïòÏó¨ Î¨∏Ï†úÎ•º Ìï¥Í≤∞Ìï¥Ï£ºÏÑ∏Ïöî." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
