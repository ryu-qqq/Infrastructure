name: Terraform Plan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-*.yml'

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-2

      - name: Run Governance Validators
        run: |
          echo "🔍 Running governance validators..."
          chmod +x scripts/validators/*.sh

          # Run all validators
          ./scripts/validators/check-tags.sh
          ./scripts/validators/check-encryption.sh
          ./scripts/validators/check-naming.sh

          echo "✅ All governance checks passed!"

      - name: Terraform Format Check
        working-directory: terraform/atlantis
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: terraform/atlantis
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform/atlantis
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform/atlantis
        run: |
          terraform plan -no-color -out=tfplan
          terraform show -no-color tfplan > plan.txt
        continue-on-error: true

      - name: Comment Plan on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('terraform/atlantis/plan.txt', 'utf8');
            const output = `#### Terraform Plan 📋

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${plan}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
