# {{ service_name | upper }} - S3 Bucket

Generated by Infrastructure Wizard on {{ generation_time }}

## Overview

S3 bucket for {{ service_name }} with encryption, versioning, and lifecycle policies.

## Resources Created

- S3 bucket: `{{ service_name }}-{{ bucket_purpose }}-{{ environment }}`
- KMS key for encryption
- CloudWatch log group for access logs
{% if versioning %}- Versioning enabled{% endif %}
{% if lifecycle_enabled %}- Lifecycle policies configured{% endif %}
- SSM parameters for bucket information

## Configuration

- **Purpose**: {{ bucket_purpose }}
- **Environment**: {{ environment }}
- **Region**: {{ aws_region }}
- **Encryption**: KMS (customer-managed key)
- **Public Access**: {% if public_access %}Enabled{% else %}Blocked{% endif %}
{% if versioning %}- **Versioning**: Enabled{% endif %}
{% if lifecycle_enabled %}- **Lifecycle**: Enabled (30d ‚Üí IA, 90d ‚Üí Glacier, 180d ‚Üí Deep Archive){% endif %}

## Security Features

- üîí KMS encryption with customer-managed keys
- üö´ TLS enforcement (HTTPS only)
- üõ°Ô∏è Deny unencrypted uploads
- üîê Block public access (default)
- üìù CloudWatch logging

## Lifecycle Policy

{% if lifecycle_enabled %}
- **30 days**: Transition to Standard-IA
- **90 days**: Transition to Glacier Instant Retrieval
- **180 days**: Transition to Deep Archive
- **Old versions**: Expire after 90 days
- **Incomplete uploads**: Delete after 7 days
{% else %}
Lifecycle policies are disabled. Enable with `lifecycle_enabled: true` in configuration.
{% endif %}

## Usage

### Upload File

```bash
aws s3 cp file.txt s3://{{ service_name }}-{{ bucket_purpose }}-{{ environment }}/
```

### List Objects

```bash
aws s3 ls s3://{{ service_name }}-{{ bucket_purpose }}-{{ environment }}/
```

### Download File

```bash
aws s3 cp s3://{{ service_name }}-{{ bucket_purpose }}-{{ environment }}/file.txt ./
```

### Sync Directory

```bash
aws s3 sync ./local-dir s3://{{ service_name }}-{{ bucket_purpose }}-{{ environment }}/remote-dir/
```

## SSM Parameters

Bucket information is stored in SSM Parameter Store:

- `/{{ service_name }}/{{ environment }}/s3/bucket-name`: Bucket name
- `/{{ service_name }}/{{ environment }}/s3/bucket-arn`: Bucket ARN
- `/{{ service_name }}/{{ environment }}/s3/kms-key-id`: KMS key ID

### Retrieve Parameters

```bash
aws ssm get-parameter --name "/{{ service_name }}/{{ environment }}/s3/bucket-name" --query "Parameter.Value" --output text
```

## Deployment

1. Initialize Terraform: `terraform init`
2. Plan changes: `terraform plan`
3. Apply: `terraform apply`

## Monitoring

CloudWatch log group: `/aws/s3/{{ service_name }}-{{ bucket_purpose }}-{{ environment }}`

View logs:

```bash
aws logs tail /aws/s3/{{ service_name }}-{{ bucket_purpose }}-{{ environment }} --follow
```

---

ü§ñ Generated with Infrastructure Wizard
