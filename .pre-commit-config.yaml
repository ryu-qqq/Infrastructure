# Pre-commit hooks for Infrastructure repository
# Install: pre-commit install
# Run manually: pre-commit run --all-files
#
# Documentation: https://pre-commit.com/

repos:
  # ============================================================================
  # Terraform Formatting and Validation
  # ============================================================================
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.92.0
    hooks:
      - id: terraform_fmt
        name: Terraform Format
        description: Format Terraform files with terraform fmt

      - id: terraform_validate
        name: Terraform Validate
        description: Validate Terraform configuration
        args:
          - --hook-config=--retry-once-with-cleanup=true

      - id: terraform_tflint
        name: TFLint
        description: Lint Terraform files with TFLint
        args:
          - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl

      - id: terraform_docs
        name: Terraform Docs
        description: Generate README.md for Terraform modules
        args:
          - --hook-config=--path-to-file=README.md
          - --hook-config=--add-to-existing-file=true
          - --hook-config=--create-file-if-not-exist=true

  # ============================================================================
  # Infrastructure Governance Validators
  # ============================================================================
  - repo: local
    hooks:
      - id: check-tags
        name: Check Required Tags
        description: Validate that all Terraform resources include required governance tags
        entry: bash scripts/validators/check-tags.sh
        language: system
        files: \.tf$
        pass_filenames: false
        always_run: false
        verbose: true

      - id: check-encryption
        name: Check Encryption
        description: Validate encryption settings for data-storing resources
        entry: bash scripts/validators/check-encryption.sh
        language: system
        files: \.tf$
        pass_filenames: false
        always_run: false

      - id: check-naming
        name: Check Naming Conventions
        description: Validate resource naming follows standards
        entry: bash scripts/validators/check-naming.sh
        language: system
        files: \.tf$
        pass_filenames: false
        always_run: false

      - id: validate-terraform-file
        name: Validate Terraform File Structure
        description: Check Terraform file structure and best practices
        entry: bash scripts/validators/validate-terraform-file.sh
        language: system
        files: \.tf$
        pass_filenames: true

  # ============================================================================
  # General Code Quality
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim Trailing Whitespace

      - id: end-of-file-fixer
        name: Fix End of Files

      - id: check-yaml
        name: Check YAML
        exclude: ^\.github/workflows/

      - id: check-added-large-files
        name: Check Large Files
        args: ['--maxkb=1000']

      - id: check-merge-conflict
        name: Check Merge Conflicts

      - id: detect-private-key
        name: Detect Private Keys

      - id: check-case-conflict
        name: Check Case Conflicts

      - id: mixed-line-ending
        name: Check Line Endings

  # ============================================================================
  # Secrets Detection
  # ============================================================================
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.2
    hooks:
      - id: gitleaks
        name: Detect Secrets with Gitleaks

# ============================================================================
# Global Configuration
# ============================================================================
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '3.0.0'
